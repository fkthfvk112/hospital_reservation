<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="Review">

<!-- 리뷰작성 -->
<insert id="reviewWrite" parameterType="component.dto.ReviewDto">
INSERT INTO review 
	(id, hospital_id, user_id, content, wdate, score) 
VALUES (${id}, #{hospital_id}, #{user_id }, #{content}, now(), #{score})		
</insert>

<!-- 리뷰보기(최신순) -->
<select id="recentList" parameterType="Integer" resultType="component.dto.ReviewDto">
select id, hospital_id, user_id, content, wdate, score 
from review
where hospital_id=#{hospital_id}
order by wdate desc
</select>


<!-- 리뷰보기(평점높은순) -->
<select id="scoreUplist" parameterType="component.dto.ReviewDto" resultType="component.dto.ReviewDto">
SELECT id, hospital_id, user_id, content, wdate, score, AVG(score) 
FROM review
where hospital_id=#{hospital_id}
GROUP BY id
order by AVG(score) desc
</select>


<!-- 리뷰보기(평점낮은순) -->
<select id="scoreDownlist" parameterType="component.dto.ReviewDto" resultType="component.dto.ReviewDto">
SELECT id, hospital_id, user_id, content, wdate, score, AVG(score) 
FROM review
where hospital_id=#{hospital_id}
GROUP BY id
order by AVG(score) asc
</select>























<!-- 
<select id="list"  parameterType="Integer"
	resultType="component.dto.ReviewDto">
select id, hospital_id, user_id, content, wdate, score
from (select id, hospital_id, user_id, content, wdate, score, 
ROW_NUMBER() OVER(<include refid="sort" />) AS RNUM 
from review
where 1=1
</select>

<sql id="sort">
<if test="sort == null">
ORDER BY review DESC
</if>
<if test="sort == 'maxScore'">
ORDER BY maxScore DESC
</if>
<if test="sort == 'minScore'">
ORDER BY minScore DESC
</if>
</sql>
 -->

<!-- 리뷰삭제 -->
<delete id="reviewDelete">
delete from review
where id=#{id}
and hospital_id=${hospital_id}
</delete>

</mapper>